CompositeActionListenerWithPriorities.java
    actionPerformed
        Purpose: to execute actions when asked

        Parameters: ActionEvent

        Returns: void

    addClassActionListener
        Purpose: to add an action listener for other classes

        Parameters: ActionListener a,
            -"priority" this action needs to be executed (int),
            -"keyCause" which is what executed the action next button, back button etc. (String),
            -"button"  necessary in case the selection is for radio buttons
            -"listenerSource" which is from which class its being called. Compared to key cause to make sure they match.
                Done this way because the built-in way action listeners work can have conflicts due to being multi-threaded.

        Returns: void

    DEBUGLISTENERSIZE
        Purpose: For debugging WOULD NOT BE KEPT IN FINAL PRODUCT, AS IT COULD CREATE VULNERABILITIES

    reset
        Purpose: to reset variables, after all actions have been performed

        Parameters: nothing

        Returns: void

    setCurrentClass
        Purpose: To tell action priorities what the current class should be

        Parameters: thisClass (what to change class to)

        Returns: void

    getCurrentClass
        Purpose: To get what the current class is

        Parameters: nothing

        Returns: void

    DEBUGLISTENERMAP
        Purpose: For debugging WOULD NOT BE KEPT IN FINAL PRODUCT, AS IT COULD CREATE VULNERABILITIES

    TESTFORCECURRENTCLASS
        Purpose: For debugging WOULD NOT BE KEPT IN FINAL PRODUCT, AS IT COULD CREATE VULNERABILITIES

    TESTRESETACTIONPRIORITIES
        Purpose: For debugging WOULD NOT BE KEPT IN FINAL PRODUCT, AS IT COULD CREATE VULNERABILITIES
_____________________________________

CreateButton.java

    backButtonCreate
        Purpose: To create a back button that can be used by the GUI

        Parameters: nothing

        Returns: JButton (the back button)

    saveButtonCreate
        Purpose: To create a save button that can be used by the GUI

        Parameters: nothing

        Returns: JButton (the save button)

    nextButtonCreate
        Purpose: To create a next button that can be used by the GUI

        Parameters: nothing

        Returns: JButton (the next button)

    makeBackNextButtonsPanel

        Purpose: to use the buttons to make a panel

        Parameters: buttons and panel with save button

        Returns: JPanel (the backNextButtonsPanel)

    setTextFieldPanel
        -set variable from other classes

    addDocumentListenerForSaving

        Purpose: to add a doccument listener for a textfield, which
        can enable the save button and change the textField empty state based on doccument
        updates.

        Parameters: textfield

        Returns: void

    saveButtonEnable

        Purpose: for other files to be enable enable save button

        Parameters: nothing

        Returns: void

    removeFromWindow

        Purpose: since the buttons and button panel are from this class,
        this class can remove them. Removes buttons and panel from window.

        Parameters: nothing

        Returns: void


_____________________________________
Creator.java

    createTextBox
        Purpose: To make textboxes for student classes

        Parameters: placeholder (default text), thisType (type of whats created),
        boxLoaded (if the box being created is loaded, necessary for placeholder purposes)

        Returns: JTextField created

    checkIfLoadedAndAction
        Purpose: Sets whether textfield is loaded, and emptied

        Parameters: none

        Returns: void

    setTextFieldContainer, getTextFieldContainer
        Function to set and retreive textFieldpanel

    deleteTextBox
        Purpose: To delete a textbox

        Parameters: JPanel container (with textbox that user wants to delete)

        Returns: void

    windowFix
        Purpose: To update GUI components

        Parameters: nothing

        Returns: void

    hideContainer
        Purpose: To hide containers based in creator class

        Parameters: nothing

        Returns: void

    removeContainer
        Purpose: To remove containers based in creator class

        Parameters: nothing

        Returns: void

    typeBox
        Purpose: To create components for StudentStatCollect class (different because of
        different nesting. Which I should not have done, but it did help me be exposed to different
        issues, and their respective solutions)

        Parameters: placeholder (default text), thisType (type of whats created),
        boxLoaded (if the box being created is loaded, necessary for placeholder purposes)

        Returns: JPanel

_____________________________________
Decorator.java

    InstructionsPanelDecorate
        Purpose:

        Parameters:

        Returns:

    choiceGbc
        Purpose:

        Parameters:

        Returns:

    areYouSureMessage
        Purpose:

        Parameters:

        Returns:

    yesButtonActionListener
        Purpose:

        Parameters:

        Returns:

    yesButtonAction
        Purpose:

        Parameters:

        Returns:

    reasonIsDeletingActionYes
        Purpose:

        Parameters:

        Returns:

    reasonIsChangingUsernameYes
        Purpose:

        Parameters:

        Returns:

    reasonIsStudentStatsEmptyYes
        Purpose:

        Parameters:

        Returns:

    deleteFocusListeners
        Purpose:

        Parameters:

        Returns:

    noButtonActionListener
        Purpose:

        Parameters:

        Returns:

    noButtonAction
        Purpose:

        Parameters:

        Returns:

    setCaretPositionToZero
        Purpose:

        Parameters:

        Returns:

    genericPopUpMessage
        Purpose:

        Parameters:

        Returns:

    pleaseChooseAnOptionWithRadioButtons
        Purpose:

        Parameters:

        Returns:

    hideWindow
        Purpose:

        Parameters:

        Returns:

    decorateTextBox
        Purpose:

        Parameters:

        Returns:

    areYouSureMessageListenerForEditingUsername
        Purpose:

        Parameters:

        Returns:

    maximumAmountReachedPopup
        Purpose:

        Parameters:

        Returns:

    getFontFromTextFields
        Purpose:

        Parameters:

        Returns:

    removeForNewUserWindow
        Purpose:

        Parameters:

        Returns:
_____________________________________

FileHandling.java

    readFileToList
        Purpose: Turn the contents of a text file into a list. Helpful for print grades.

        Parameters: String filePath (where the data is located)

        Returns: ArrayList<String> list

    fileExists
        Purpose: Checks if a file exists

        Parameters: String filePath

        Returns: Boolean based on whether the file path is valid

    folderExists
        Purpose: Checks if a folder is at a file path

        Parameters: String folderPath (the path to the folder)

        Returns: Boolean based on whether the path to the folder is valid

    fileIsNotEmpty
        Purpose: Checks if a file is not empty, useful for determining whether
        to add new boxes

        Parameters: String filePath

        Returns: Boolean based on whether the file is not empty

    loadtextboxes
        Purpose: loads information in file path into textboxes
        and puts textboxes on GUI

        Parameters: String filePath

        Returns: JPanel with the boxes

    writeArrayListToFile
        Purpose: Given an array list, write it to a file, such as after deleting
        lines due to them being placeholders, which dont get written to these files.

        Parameters: String filePath to desired file, and lines to write

        Returns: void

    deleteClass
        Purpose: Given a filepath, delete the file

        Parameters: String filePathString

        Returns: void

    deleteFromDeleteQueue
        Purpose: There is a deleting queue that is set in setUserInformation, this
        function executes the deletions

        Parameters: nothing

        Returns: void
_____________________________________

FileWriting.java

    writeFolderToFile
        Purpose:

        Parameters:

        Returns:

    decideIfWrite
        Purpose:

        Parameters:

        Returns:

    tryToWrite
        Purpose:

        Parameters:

        Returns:

    writeTextToFile
        Purpose:

        Parameters:

        Returns:

    tryToWriteTextFieldWithoutAppend
        Purpose:

        Parameters:

        Returns:

    tryToWriteTextFieldWithoutAppend
        Purpose:

        Parameters:

        Returns:

    seeHowManyPlaceholdersToSkip
        Purpose:

        Parameters:

        Returns:

    writeTextToFileWithAppend
        Purpose:

        Parameters:

        Returns:

    removeUnwritablePlaceholders
        Purpose:

        Parameters:

        Returns:

    deleteLines
        Purpose:

        Parameters:

        Returns:

    getClassList
        Purpose:

        Parameters:

        Returns:

    howManyPlaceholders
        Purpose:

        Parameters:

        Returns:

    iteratePanelForHowManyPlaceholders
        Purpose:

        Parameters:

        Returns:

    TESTFORCECLASSLISTADD, TESTFORCEFINALLIST -

_____________________________________

Gather.java

    gatherLaunch:
        Purpose: To allow for launching without making a new instance

        Parameters: nothing

        Returns: void

    makeUsernameBox:
        Purpose: decide what default text should be in the username box

        Parameters: nothing

        Returns: void

    textFieldMouseListener:
        Purpose:

        Parameters:

        Returns:

    instructionsWordsWindow:
        Purpose:

        Parameters:

        Returns:

    decorateInstructions:
        Purpose:

        Parameters:

        Returns:

    inputName:
        Purpose:

        Parameters:

        Returns:

    buttonSetUpAction:
        Purpose:

        Parameters:

        Returns:

    makeBackAction:
        Purpose:

        Parameters:

        Returns:

    backButtonAction:
        Purpose:

        Parameters:

        Returns:

    makeSaveButton:
        Purpose:

        Parameters:

        Returns:

    makeNextButton:
        Purpose:

        Parameters:

        Returns:

    nextButtonAddActionListener
        Purpose:

        Parameters:

        Returns:

    doNextButtonProcedure
        Purpose:

        Parameters:

        Returns:

    nextButtonAction
        Purpose:

        Parameters:

        Returns:

    errorMessageSetUp
        Purpose:

        Parameters:

        Returns:

    setUsername
        Purpose:

        Parameters:

        Returns:

    getWindowX
        Purpose:

        Parameters:

        Returns:

    getWindowY
        Purpose:

        Parameters:

        Returns:

    showWindow
        Purpose:

        Parameters:

        Returns:

    hideWindow
        Purpose:

        Parameters:

        Returns:

    removeFromWindow
        Purpose:

        Parameters:

        Returns:

_____________________________________

GoIntoPanel.java

    goIntoPanel
        Purpose: digs into panel, and returns text from panel

        Parameters: panel, index (where to go into panel)

        Returns: the text within the panel is returned

    goIntoPanelReturnTextbox
        Purpose: return the textbox within the panel

        Parameters: panel, index (where to go into panel)

        Returns: JTextField, which is the textbox at the deepest part of the panel indexed

    checkIfHasPlaceholder
        Purpose: given a panel of textfields, will return a boolean telling whether
        its textboxes contain a placeholder. Can take a panel that has nested panels
        containing textfields.

        Parameters: textFieldPanel2 (not to be confused with textFieldPanel variable used
        in other classes)

        Returns: Boolean

    goIntoPanelReturnTypeOfFirstComponentInPanel
        Purpose: returns a String detailing whether a panel's first component is a
        JTextField, JLabel, or JPanel. Useful considering not all JTextFields and Jlabels etc are nested uniformly,
        and type information needed in order to not count special cases (like the JLabel) as placeholders

        Parameters: panel

        Returns: String detailing whether a panel's first component is a
        JTextField, JLabel, or JPanel.

_____________________________________
GradeTrackerTests.java

Contains various test functions. Some cannot be run without accounts with specific
loaded data, which I did not put in the repo. But, would be easy to replicate by looking
at the test case.
_____________________________________

Launcher.java

    main:
        Purpose: to run the initialize function.

        Parameters: String[] args

        Returns: void

    initialize:
        Purpose: to set up jframe window and run NewUser() instance

        Parameters: nothing

        Returns: void
_____________________________________

MainWindow.java

    MainWindowLaunch
        Purpose:

        Parameters:

        Returns:

    windowSetUp
        Purpose:

        Parameters:

        Returns:

    InstructionsWordsWindow
        Purpose:

        Parameters:

        Returns:

    truncateLabelText
        Purpose:

        Parameters:

        Returns:

    radioButtonSetUp
        Purpose:

        Parameters:

        Returns:

    choicesButtonDecorate
        Purpose:

        Parameters:

        Returns:

    addToChoicesPanel
        Purpose:

        Parameters:

        Returns:

    backNextButton
        Purpose:

        Parameters:

        Returns:

    doBackButtonProcedure
        Purpose:

        Parameters:

        Returns:

    doNextButtonProcedure
        Purpose:

        Parameters:

        Returns:

    goToStudentClasses
        Purpose:

        Parameters:

        Returns:

    writeUsername
        Purpose:

        Parameters:

        Returns:

    checkIfExisting
        Purpose:

        Parameters:

        Returns:

    readNames
        Purpose:

        Parameters:

        Returns:

    readLine
        Purpose:

        Parameters:

        Returns:

    writeNewName
        Purpose:

        Parameters:

        Returns:

    setButtonSelected
        Purpose:

        Parameters:

        Returns:

    show
        Purpose:

        Parameters:

        Returns:

    hideWindow
        Purpose:

        Parameters:

        Returns:
    
    EnterAction- contains a timer to prevent thread issue, along with typical next button
    shortcut.

_____________________________________

NewUser.java

    newUserSetup:
        Purpose: Has functions that need to be run to start up the New User window

        Parameters: nothing

        Returns: void

    instructionsWordsWindow:
        Purpose: Sets up instructions screen

        Parameters: nothing

        Returns: void

    radioButtonSetUp:
        Purpose: make radio buttons, put them in panels, and add to window

        Parameters: nothing

        Returns: void

    existingButton
        Purpose: make existing button and its action listener

        Parameters: nothing

        Returns: void

    newUserButton
        Purpose: make new user button and its action listener

        Parameters: nothing

        Returns: void

    checkIfExistingChangedWithUsername
        Purpose: check if the user changed the new user or existing buttons.

        Parameters: nothing

        Returns: void

    choicesButtonDecorate
        Purpose: decorate the radiobuttons

        Parameters: button to be decorated

        Returns: void

    addToChoicesPanel
        Purpose: add buttons to choices panel

        Parameters: ButtonGroup teacherStudentGroup, JRadioButton existingButton, JRadioButton newUserButton, JPanel choicesPanel.
        Too many parameters, but this function was made before I learned better practices, but
        I did get exposed to different ways of doing the same thing. Buttons from this class are added to panel.

        Returns: void

    buttonSetUp
        Purpose: make buttons, add to backButtonPanel, with their respective action listeners

        Parameters: nothing

        Returns: void

    doNextButtonProcedure
        Purpose: action for if user hits next button

        Parameters: nothing

        Returns: void

    setButtonSelected
        Purpose: when going backward to this class, load what was selected

        Parameters: nothing

        Returns: void

    showWindow
        Purpose: display the window

        Parameters: nothing

        Returns: void

    addNewUserActionListener
        Purpose: new user action listener

        Parameters: nothing

        Returns: void

    addExistingUserActionListener
        Purpose: action listener for existing user

        Parameters: nothing

        Returns: void

    nextButtonActionListenerWithPriorities
        Purpose: add action priorities in CompositeActionListenerWithPriorities class

        Parameters: String keyCause (ex. next button)

        Returns: void

_____________________________________
PrintStudentGrades.java

    printStudentGradesLaunch
        Purpose: to be able to launch print student grades from other classes
        without creating a new instance

        Parameters: nothing

        Returns: void

    addEverythingToWindow
        Purpose: to add components to the GUI

        Parameters: float total (final grade for class)

        Returns: void

    getGradeTotal
        Purpose: to allow other functions to get final grade total

        Parameters: nothing

        Returns: float (the final grade total)

    makeAmountOfFinalGradeList
        Purpose: makes list calculating (average*percentage of grade)/100

        Parameters: nothing

        Returns: void

    makeListOfAveragesList
        Purpose: makes list of averages for each grade type

        Parameters: nothing

        Returns: void

    makeGradeTypeList
        Purpose: make list of grade type names

        Parameters: nothing

        Returns: void

    makePercentageOfGradeList
        Purpose: make a list with percentages of grades

        Parameters: nothing

        Returns: void

    setTitle
        Purpose: sets title of window

        Parameters: nothing

        Returns: void

    buttonSetUpAction
        Purpose: create buttons with respective actions

        Parameters: nothing

        Returns: void

    doBackButtonProcedure
        Purpose: do back button actions

        Parameters: nothing

        Returns: void

    checkForNextButtonProcedure
        Purpose: checks if in final class, if so, disable next button. Otherwise, user is
        permitted to go to the next class

        Parameters: nothing

        Returns: void

    doNextButtonProcedure
        Purpose: go to next class

        Parameters: nothing

        Returns: void

    hideWindow
        Purpose: hide and remove unecessary components

        Parameters: nothing

        Returns: void

_____________________________________

Set.java

    A static class that sets miscellaneous variables concerning the save button, and current window
    getCurrentWindowClosing so that the save button can be accessed and removed by being set to null,
    among other functions. Testing functions would need to be removed if it were
    to be public.

    getInstance, setWindow, getWindow, setNewOrExistingChanged, getNewOrExistingChanged,
    setFilePath, getFilePath, setDEBUGBOX, getDEBUGBOX,
    setCurrentSaveButton, getCurrentSaveButton, TESTRESETSET,
    removeSave, setCurrentWindowClosing,
    getCurrentWindowClosing- custom window closing function if it needs
    to be removed in another class
    ,setCurrentSaveButtonToNull

_____________________________________

SetListeners.java

    A static class for setting and requesting listeners.
    getInstance, setDialogFocusListener, getDialogFocusListener, setYesFocusListener
    getYesFocusListener, setNoFocusListener, getNoFocusListener

_____________________________________

SETTEST.java

    WOULD NOT BELONG IN A PUBLIC VERSION, AS IT COULD BE USED BY BAD ACTORS.
    ALL FUNCTIONS AND CALLING OF THESE FUNCTIONS WOULD BE REMOVED

    For testing purposes, has set and get functions to retrieve variables in ways that cannot happen
    without a user using the GUI.

_____________________________________
StudentStatCollect.java
    studentStatCollectLaunch
        Purpose: to be able to launch student stat collect without creating another instance,
        useful to reuse the instance for future user classes.

        Parameters: nothing

        Returns: void

    buttonSetUpAction
        Purpose: make buttons menu and attach their actions

        Parameters: nothing

        Returns: void

    backAction
        Purpose: add action listener for back button

        Parameters: JButton backButton

        Returns: void

    decideBackActionBasedOnClass
        Purpose: based on class indexes, decide which classes the GUI needs

        Parameters: nothing

        Returns: void

    backAction2
        Purpose: basically the same as regular backAction function, but is used is the user uses
        "Remove placeholders to continue?"> yes.
        If it used the regular backaction, it would cause an infinite loop

        Parameters: nothing

        Returns: void

    goToPreviousClasses
        Purpose: save and go to earlier classes

        Parameters: nothing

        Returns: void

    addLoadedBoxes
        Purpose: check for files to load, and load information to GUI

        Parameters: nothing

        Returns: void

    saveAction
        Purpose: add action listener for save button

        Parameters: JButton saveButton

        Returns: void

    saveButtonAction
        Purpose: saves information

        Parameters: String actionCause (if the action was caused by going to other classes
        or clicking the save button)

        Returns: void

    nextButtonAction
        Purpose: add action listener to next button

        Parameters: JButton nextButton

        Returns: void

    doNextButtonProcedure
        Purpose: save and perform input sanitization

        Parameters: nothing

        Returns: void

    ifCreditsIsJPanel
        Purpose: if in doNextButtonProcedure function it determines it is a JPanel,
        it leads here and performs input sanitization

        Parameters: nothing

        Returns: void

    checkPercentageOfGradesFormat
        Purpose:

        Parameters:

        Returns:

    checkCreditsFormat
        Purpose:

        Parameters:

        Returns:

    checkGradesFormat
        Purpose:

        Parameters:

        Returns:

    makeFormatReminderDialog
        Purpose:

        Parameters:

        Returns:

    allPassedGoToStudentStats
        Purpose:

        Parameters:

        Returns:

    goToPrintStudentGrades
        Purpose:

        Parameters:

        Returns:

    doNextButtonProcedure2
        Purpose:

        Parameters:

        Returns:

    visitNextStudentClass
        Purpose:

        Parameters:

        Returns:

//
    boxManageCreate
        Purpose:

        Parameters:

        Returns:

    newSet
        Purpose:

        Parameters:

        Returns:

    removeVariablesInWindow
        Purpose:

        Parameters:

        Returns:

    TESTNEXTBUTTON, TESTNEWTYPEBUTTON, TESTBACKBUTTON
//
_____________________________________

TESTFUNCTSFOREASYTESTING
    WOULD NOT BELONG IN A PUBLIC VERSION, AS IT COULD BE USED BY BAD ACTORS.
    ALL FUNCTIONS AND CALLING OF THESE FUNCTIONS WOULD BE REMOVED

    provides functions that a developer can reference for testcases, ex. a function that
    gives all necessary information to get to the "StudentStatCollect" screen as a
    signed-in existing user named "TESTHELLO".

_____________________________________

TextFieldColorFocusListener.java

    focusGained
        Purpose: Decide what text is and emptied state is upon clicks

        Parameters: Focus event e

        Returns: void

    focusLost
        Purpose: Decide what text is and emptied state is upon clicks (like the placeholder if box is
        empty), and caret position

        Parameters: Focus event e

        Returns: void

    makeLoseFocus
        Purpose: forces textboxes to lose focus and chooses appropriate text color,
        and caret position.

        Parameters: placeholder (default text in textbox)

        Returns: void

_____________________________________