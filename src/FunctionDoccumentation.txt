CompositeActionListenerWithPriorities.java
    actionPerformed
        Purpose: to execute actions when asked

        Parameters: ActionEvent

        Returns: void

    addClassActionListener
        Purpose: to add an action listener for other classes

        Parameters: ActionListener a,
            -"priority" this action needs to be executed (int),
            -"keyCause" which is what executed the action next button, back button etc. (String),
            -"button"  necessary in case the selection is for radio buttons
            -"listenerSource" which is from which class its being called. Compared to key cause to make sure they match.
                Done this way because the built-in way action listeners work can have conflicts due to being multi-threaded.

        Returns: void

    DEBUGLISTENERSIZE
        Purpose: For debugging WOULD NOT BE KEPT IN FINAL PRODUCT, AS IT COULD CREATE VULNERABILITIES

    reset
        Purpose: to reset variables, after all actions have been performed

        Parameters: nothing

        Returns: void

    setCurrentClass
        Purpose: To tell action priorities what the current class should be

        Parameters: thisClass (what to change class to)

        Returns: void

    getCurrentClass
        Purpose: To get what the current class is

        Parameters: nothing

        Returns: void

    DEBUGLISTENERMAP
        Purpose: For debugging WOULD NOT BE KEPT IN FINAL PRODUCT, AS IT COULD CREATE VULNERABILITIES

    TESTFORCECURRENTCLASS
        Purpose: For debugging WOULD NOT BE KEPT IN FINAL PRODUCT, AS IT COULD CREATE VULNERABILITIES

    TESTRESETACTIONPRIORITIES
        Purpose: For debugging WOULD NOT BE KEPT IN FINAL PRODUCT, AS IT COULD CREATE VULNERABILITIES
_____________________________________

CreateButton.java

    backButtonCreate
        Purpose: To create a back button that can be used by the GUI

        Parameters: nothing

        Returns: JButton (the back button)

    saveButtonCreate
        Purpose: To create a save button that can be used by the GUI

        Parameters: nothing

        Returns: JButton (the save button)

    nextButtonCreate
        Purpose: To create a next button that can be used by the GUI

        Parameters: nothing

        Returns: JButton (the next button)

    makeBackNextButtonsPanel

        Purpose: to use the buttons to make a panel

        Parameters: buttons and panel with save button

        Returns: JPanel (the backNextButtonsPanel)

    setTextFieldPanel
        -set variable from other classes

    addDocumentListenerForSaving

        Purpose: to add a doccument listener for a textfield, which
        can enable the save button and change the textField empty state based on doccument
        updates.

        Parameters: textfield

        Returns: void

    saveButtonEnable

        Purpose: for other files to be enable enable save button

        Parameters: nothing

        Returns: void

    removeFromWindow

        Purpose: since the buttons and button panel are from this class,
        this class can remove them. Removes buttons and panel from window.

        Parameters: nothing

        Returns: void


_____________________________________
Creator.java

    createTextBox
        Purpose:

        Parameters:

        Returns:

    checkIfLoadedAndAction
        Purpose:

        Parameters:

        Returns:

    setTextFieldContainer
        Purpose:

        Parameters:

        Returns:

    getTextFieldContainer
        Purpose:

        Parameters:

        Returns:

    deleteTextBox
        Purpose:

        Parameters:

        Returns:

    windowFix
        Purpose:

        Parameters:

        Returns:

    hideContainer
        Purpose:

        Parameters:

        Returns:

    removeContainer
        Purpose:

        Parameters:

        Returns:

    typeBox
        Purpose:

        Parameters:

        Returns:

    deleteMouseListeners
        Purpose:

        Parameters:

        Returns:

_____________________________________

FileHandling.java

    readFileToList
        Purpose:

        Parameters:

        Returns:

    fileExists
        Purpose:

        Parameters:

        Returns:

    folderExists
        Purpose:

        Parameters:

        Returns:

    fileIsNotEmpty
        Purpose:

        Parameters:

        Returns:

    loadtextboxes
        Purpose:

        Parameters:

        Returns:

    writeArrayListToFile
        Purpose:

        Parameters:

        Returns:

    deleteClass
        Purpose:

        Parameters:

        Returns:

    deleteFromDeleteQueue
        Purpose:

        Parameters:

        Returns:
_____________________________________

FileWriting.java

    writeFolderToFile
        Purpose:

        Parameters:

        Returns:

    decideIfWrite
        Purpose:

        Parameters:

        Returns:

    tryToWrite
        Purpose:

        Parameters:

        Returns:

    writeTextToFile
        Purpose:

        Parameters:

        Returns:

    tryToWriteTextFieldWithoutAppend
        Purpose:

        Parameters:

        Returns:

    tryToWriteTextFieldWithoutAppend
        Purpose:

        Parameters:

        Returns:

    seeHowManyPlaceholdersToSkip
        Purpose:

        Parameters:

        Returns:

    writeTextToFileWithAppend
        Purpose:

        Parameters:

        Returns:

    removeUnwritablePlaceholders
        Purpose:

        Parameters:

        Returns:

    deleteLines
        Purpose:

        Parameters:

        Returns:

    getClassList
        Purpose:

        Parameters:

        Returns:

    howManyPlaceholders
        Purpose:

        Parameters:

        Returns:

    iteratePanelForHowManyPlaceholders
        Purpose:

        Parameters:

        Returns:

    TESTFORCECLASSLISTADD, TESTFORCEFINALLIST -

_____________________________________


Gather.java

    gatherLaunch:
        Purpose: To allow for launching without making a new instance

        Parameters: nothing

        Returns: void

    makeUsernameBox:
        Purpose: decide what default text should be in the username box

        Parameters: nothing

        Returns: void

    textFieldMouseListener:
        Purpose:

        Parameters:

        Returns:

    instructionsWordsWindow:
        Purpose:

        Parameters:

        Returns:

    decorateInstructions:
        Purpose:

        Parameters:

        Returns:

    inputName:
        Purpose:

        Parameters:

        Returns:

    buttonSetUpAction:
        Purpose:

        Parameters:

        Returns:

    makeBackAction:
        Purpose:

        Parameters:

        Returns:

    backButtonAction:
        Purpose:

        Parameters:

        Returns:

    makeSaveButton:
        Purpose:

        Parameters:

        Returns:

    makeNextButton:
        Purpose:

        Parameters:

        Returns:

    nextButtonAddActionListener
        Purpose:

        Parameters:

        Returns:

    doNextButtonProcedure
        Purpose:

        Parameters:

        Returns:

    nextButtonAction
        Purpose:

        Parameters:

        Returns:

    errorMessageSetUp
        Purpose:

        Parameters:

        Returns:

    setUsername
        Purpose:

        Parameters:

        Returns:

    getWindowX
        Purpose:

        Parameters:

        Returns:

    getWindowY
        Purpose:

        Parameters:

        Returns:

    showWindow
        Purpose:

        Parameters:

        Returns:

    hideWindow
        Purpose:

        Parameters:

        Returns:

    removeFromWindow
        Purpose:

        Parameters:

        Returns:
_____________________________________

GoIntoPanel.java

    goIntoPanel
        Purpose: digs into panel, and returns text from panel

        Parameters: panel, index (where to go into panel)

        Returns: the text within the panel is returned

    goIntoPanelReturnTextbox
        Purpose: return the textbox within the panel

        Parameters: panel, index (where to go into panel)

        Returns: JTextField, which is the textbox at the deepest part of the panel indexed

    checkIfHasPlaceholder
        Purpose: given a panel of textfields, will return a boolean telling whether
        its textboxes contain a placeholder. Can take a panel that has nested panels
        containing textfields.

        Parameters: textFieldPanel2 (not to be confused with textFieldPanel variable used
        in other classes)

        Returns: Boolean

    goIntoPanelReturnTypeOfFirstComponentInPanel
        Purpose: returns a String detailing whether a panel's first component is a
        JTextField, JLabel, or JPanel. Useful considering not all JTextFields and Jlabels etc are nested uniformly,
        and type information needed in order to not count special cases (like the JLabel) as placeholders

        Parameters: panel

        Returns: String detailing whether a panel's first component is a
        JTextField, JLabel, or JPanel.

_____________________________________

Launcher.java

    main:
        Purpose: to run the initialize function.

        Parameters: String[] args

        Returns: void

    initialize:
        Purpose: to set up jframe window and run NewUser() instance

        Parameters: nothing

        Returns: void
_____________________________________

NewUser.java

    newUserSetup:
        Purpose: Has functions that need to be run to start up the New User window

        Parameters: nothing

        Returns: void

    instructionsWordsWindow:
        Purpose: Sets up instructions screen

        Parameters: nothing

        Returns: void

    radioButtonSetUp:
        Purpose:

        Parameters:

        Returns:

    existingButton
        Purpose:

        Parameters:

        Returns:

    newUserButton
        Purpose:

        Parameters:

        Returns:

    checkIfExistingChangedWithUsername
        Purpose:

        Parameters:

        Returns:

    choicesButtonDecorate
        Purpose:

        Parameters:

        Returns:

    addToChoicesPanel
        Purpose:

        Parameters:

        Returns:

    buttonSetUp
        Purpose:

        Parameters:

        Returns:

    doNextButtonProcedure
        Purpose:

        Parameters:

        Returns:

    setButtonSelected
        Purpose:

        Parameters:

        Returns:

    showWindow
        Purpose:

        Parameters:

        Returns:

    addNewUserActionListener
        Purpose:

        Parameters:

        Returns:

    addExistingUserActionListener
        Purpose:

        Parameters:

        Returns:

    nextButtonActionListenerWithPriorities
        Purpose:

        Parameters:

        Returns:

_____________________________________
PrintStudentGrades.java


_____________________________________

Set.java

    A static class that sets miscellaneous variables concerning the save button, and current window
    getCurrentWindowClosing so that the save button can be accessed and removed by being set to null,
    among other functions. Testing functions would need to be removed if it were
    to be public.

    getInstance, setWindow, getWindow, setNewOrExistingChanged, getNewOrExistingChanged,
    setFilePath, getFilePath, setDEBUGBOX, getDEBUGBOX,
    setCurrentSaveButton, getCurrentSaveButton, TESTRESETSET,
    removeSave, setCurrentWindowClosing,
    getCurrentWindowClosing- custom window closing function if it needs
    to be removed in another class
    ,setCurrentSaveButtonToNull
_____________________________________

SETTEST.java

    WOULD NOT BELONG IN A PUBLIC VERSION, AS IT COULD BE USED BY BAD ACTORS.
    ALL FUNCTIONS AND CALLING OF THESE FUNCTIONS WOULD BE REMOVED

    For testing purposes, has set and get functions to retrieve variables in ways that cannot happen
    without a user using the GUI.

_____________________________________
StudentStatCollect.java
    studentStatCollectLaunch
        Purpose:

        Parameters:

        Returns:

    buttonSetUpAction
        Purpose:

        Parameters:

        Returns:

    backAction
        Purpose:

        Parameters:

        Returns:

    decideBackActionBasedOnClass
        Purpose:

        Parameters:

        Returns:

    backAction2
        Purpose:

        Parameters:

        Returns:
    
    goToPreviousClasses
        Purpose:

        Parameters:

        Returns:

    addLoadedBoxes
        Purpose:

        Parameters:

        Returns:

    saveAction
        Purpose:

        Parameters:

        Returns:
    
    saveButtonAction
        Purpose:

        Parameters:

        Returns:

    nextButtonAction
        Purpose:

        Parameters:

        Returns:

    doNextButtonProcedure
        Purpose:

        Parameters:

        Returns:
    
    ifCreditsIsJPanel
        Purpose:

        Parameters:

        Returns:
    
    checkPercentageOfGradesFormat
        Purpose:

        Parameters:

        Returns:
    
    checkCreditsFormat
        Purpose:

        Parameters:

        Returns:
    
    checkGradesFormat
        Purpose:

        Parameters:

        Returns:
    
    makeFormatReminderDialog
        Purpose:

        Parameters:

        Returns:
    
    allPassedGoToStudentStats
        Purpose:

        Parameters:

        Returns:
    
    goToPrintStudentGrades
        Purpose:

        Parameters:

        Returns:
    
    doNextButtonProcedure2
        Purpose:

        Parameters:

        Returns:

    visitNextStudentClass
        Purpose:

        Parameters:

        Returns:

_____________________________________

TESTFUNCTSFOREASYTESTING
    WOULD NOT BELONG IN A PUBLIC VERSION, AS IT COULD BE USED BY BAD ACTORS.
    ALL FUNCTIONS AND CALLING OF THESE FUNCTIONS WOULD BE REMOVED

    provides functions that a developer can reference for testcases, ex. a function that
    gives all necessary information to get to the "StudentStatCollect" screen as a
    signed-in existing user named "TESTHELLO".

_____________________________________

TextFieldColorFocusListener.java

    focusGained
        Purpose: Decide what text is and emptied state is upon clicks

        Parameters: Focus event e

        Returns: void

    focusLost
        Purpose: Decide what text is and emptied state is upon clicks (like the placeholder if box is
        empty), and caret position

        Parameters: Focus event e

        Returns: void

    makeLoseFocus
        Purpose: forces textboxes to lose focus and chooses appropriate text color,
        and caret position.

        Parameters: placeholder (default text in textbox)

        Returns: void

_____________________________________

EnterAction (not a file, just a function)
    Purpose:

    Parameters:

    Returns:


Purpose:

Parameters:

Returns:

